name: Build With Electron Forge
run-name: Build With Electron Forge
on: [push, workflow_dispatch]

jobs:
  windows-build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install Node Dependencies
        run: npm i
      - name: Electron Forge Build
        run: npm run make -- --platform win32 --targets @electron-forge/maker-zip
      - name: Move Output Zip
        run: move .\out\make\zip\win32\x64\cmc-mod-manager-win32-x64-2.3.0.zip .\cmc-mod-manager-win32-x64.zip
      
      - name: Upload Zip For Release
        uses: actions/upload-artifact@v3.1.2
        with:
          name: win32-x64
          path: './cmc-mod-manager-win32-x64.zip'
      
      - name: Electron Forge Build 32 bit
        run: npm run make -- --platform win32 --targets @electron-forge/maker-zip --arch=ia32
      - name: Move Output Zip
        run: move .\out\make\zip\win32\ia32\cmc-mod-manager-win32-ia32-2.3.0.zip .\cmc-mod-manager-win32-ia32.zip
      
      - name: Upload Zip For Release
        uses: actions/upload-artifact@v3.1.2
        with:
          name: win32-ia32
          path: './cmc-mod-manager-win32-ia32.zip'

  ubuntu-build:
    runs-on: ubuntu-latest

    if: ${{ always() }}
    needs: [windows-build]
    permissions:
      contents: write

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install Node Dependencies
        run: npm i
      - name: Electron Forge Build
        run: npm run make -- --platform linux --targets @electron-forge/maker-deb,@electron-forge/maker-rpm,@electron-forge/maker-zip
      - name: Move Output Zip
        run: mv ./out/make/zip/linux/x64/cmc-mod-manager-linux-x64-2.3.0.zip ./cmc-mod-manager-linux-x64.zip
      - name: Move Output Deb
        run: mv ./out/make/deb/x64/cmc-mod-manager_2.3.0_amd64.deb ./cmc-mod-manager-linux.deb
      - name: Move Output Rpm
        run: mv ./out/make/rpm/x64/cmc-mod-manager-2.3.0-1.x86_64.rpm ./cmc-mod-manager-linux.rpm
          
      - name: Retrieve Windows Build Output
        uses: actions/download-artifact@v3
        with:
          name: win32-x64
      - name: Retrieve Windows Build Output
        uses: actions/download-artifact@v3
        with:
          name: win32-ia32
      
      - name: Delete Tag & Release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: auto
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Make Auto Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: auto
          tag_prefix: ""
      
      - name: Make A Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./cmc-mod-manager-win32-x64.zip,./cmc-mod-manager-win32-ia32.zip,./cmc-mod-manager-linux-x64.zip,./cmc-mod-manager-linux.deb,./cmc-mod-manager-linux.rpm"
          tag: auto
          prerelease: true
          makeLatest: false
